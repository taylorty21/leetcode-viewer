{"java":"/**\n * Definition for a binary tree node.\n * public class TreeNode {\n *     int val;\n *     TreeNode left;\n *     TreeNode right;\n *     TreeNode(int x) { val = x; }\n * }\n */\nclass Solution {\n    public TreeNode buildTree(int[] inorder, int[] postorder) {\n        return build(inorder, postorder, 0, inorder.length - 1, 0, postorder.length - 1);\n        \n    }\n    \n    public TreeNode build(int[] inorder, int[] postorder, int is, int ie, int ps, int pe) {\n        if (ps > pe) {\n            return null;\n        }\n        TreeNode root = new TreeNode(postorder[pe]);\n        int pos = 0;\n        // Find the root in inorder\n        for (int i = is; i <= ie; i++){\n            if (inorder[i] == root.val){\n                pos = i;\n                break;\n            }\n        }\n        root.left = build(inorder, postorder, is, pos - 1, ps, ps + pos - is - 1);\n        root.right = build(inorder, postorder, pos + 1, ie, ps + pos - is, pe - 1);\n        return root;\n    }\n}"}