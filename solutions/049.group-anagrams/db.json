{"java":"class Solution {\n    public List<List<String>> groupAnagrams2(String[] strs) {\n        if (strs == null || strs.length == 0) return new ArrayList<List<String>>();\n        Map<String, List<String>> map = new HashMap();\n        for (int i = 0; i < strs.length; i++) {\n            char[] arr = strs[i].toCharArray();\n            Arrays.sort(arr);\n            String tmp = new String(arr);\n            if (map.containsKey(tmp)) {\n                map.get(tmp).add(strs[i]);\n            } else {\n                List<String> lvl = new ArrayList<>();\n                lvl.add(strs[i]);\n                map.put(tmp, lvl);\n            }\n        }\n        return new ArrayList<List<String>>(map.values());\n    }\n    \n    public static List<List<String>> groupAnagrams(String[] strs) { \n        int[] prime = {2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97, 101, 103};//最多10609个z\n    \n        List<List<String>> res = new ArrayList<>();\n        HashMap<Integer, Integer> map = new HashMap<>();\n        for (String s : strs) {\n            int key = 1;\n            for (char c : s.toCharArray()) {\n                key *= prime[c - 'a'];\n            }\n            List<String> t;\n            if (map.containsKey(key)) {\n                t = res.get(map.get(key));\n            } else {\n                t = new ArrayList<>();\n                res.add(t);\n                map.put(key, res.size() - 1);\n            }\n            t.add(s);\n        }\n        return res;\n    }\n}"}