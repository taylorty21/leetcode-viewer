{"java":"/**\r\n * Definition for singly-linked list.\r\n * public class ListNode {\r\n *     int val;\r\n *     ListNode next;\r\n *     ListNode(int x) { val = x; }\r\n * }\r\n */\r\npublic class Solution {\r\n    public ListNode addTwoNumbers(ListNode l1, ListNode l2) {\r\n        ListNode list = new ListNode(0);\r\n        Deque<Integer> stack1 = new LinkedList<>();\r\n        Deque<Integer> stack2 = new LinkedList<>();\r\n        int sum = 0;\r\n        while (l1 != null) {\r\n            stack1.push(l1.val);\r\n            l1 = l1.next;\r\n        }\r\n        while (l2 != null) {\r\n            stack2.push(l2.val);\r\n            l2 = l2.next;\r\n        }\r\n        while (!stack1.isEmpty() || !stack2.isEmpty()) {\r\n            if (!stack1.isEmpty()) sum += stack1.pop();\r\n            if (!stack2.isEmpty()) sum += stack2.pop();\r\n            list.val = sum % 10;\r\n            sum /= 10;\r\n            // new node is a temp ListNode holder for next iteration\r\n            ListNode newNode = new ListNode(sum);\r\n            newNode.next = list;\r\n            // iterate to the next\r\n            list = newNode;\r\n            \r\n        }\r\n        return list.val == 0 ? list.next : list;\r\n    }\r\n}"}