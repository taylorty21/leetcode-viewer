{"java":"public class Solution {\n    public boolean isValid(String s) {\n        Stack<Character> stack = new Stack<>();\n        for (char c : s.toCharArray()) {\n            if (c == '(')\n                stack.push(')');\n            else if (c == '{')\n                stack.push('}');\n            else if (c == '[')\n                stack.push(']');\n            else if (stack.isEmpty() || stack.pop() != c)\n                return false;\n        }\n        return stack.isEmpty();\n    }\n    \n    public boolean isValid2(String s) {\n        Stack<Character> stack = new Stack<>();\n        // Iterate through string until empty\n        for(int i = 0; i<s.length(); i++) {\n            // Push any open parentheses onto stack\n            if(s.charAt(i) == '(' || s.charAt(i) == '[' || s.charAt(i) == '{')\n                stack.push(s.charAt(i));\n            // Check stack for corresponding closing parentheses, false if not valid\n            else if(s.charAt(i) == ')' && !stack.empty() && stack.peek() == '(')\n                stack.pop();\n            else if(s.charAt(i) == ']' && !stack.empty() && stack.peek() == '[')\n                stack.pop();\n            else if(s.charAt(i) == '}' && !stack.empty() && stack.peek() == '{')\n                stack.pop();\n            else\n                return false;\n        }\n        // return true if no open parentheses left in stack\n        return stack.empty();\n    }\n}"}