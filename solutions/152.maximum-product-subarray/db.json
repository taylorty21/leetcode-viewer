{"java":"class Solution {\n    // Loop through the array, each time remember the max and min value for the previous product\n    // the most important thing is to update the max and min value: \n    // we have to compare among max * A[i], min * A[i] as well as A[i], since this is product, a negative * negative could be positive.\n    public int maxProduct(int[] nums) {\n        if (nums == null || nums.length == 0) {\n            return 0;\n        }\n        int localMin = nums[0];\n        int localMax = nums[0];\n        int globalMax = nums[0];\n        for (int i = 1; i < nums.length; i++) {\n            int temp = localMax;\n            localMax = Math.max(nums[i], Math.max(localMax * nums[i], localMin * nums[i]));\n            localMin = Math.min(nums[i], Math.min(temp * nums[i], localMin * nums[i]));\n            \n            if (localMax > globalMax) globalMax = localMax;\n        }\n        return globalMax;\n    }\n}"}