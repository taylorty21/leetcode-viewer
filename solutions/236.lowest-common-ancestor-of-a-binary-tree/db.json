{"java":"/**\n * Definition for a binary tree node.\n * public class TreeNode {\n *     int val;\n *     TreeNode left;\n *     TreeNode right;\n *     TreeNode(int x) { val = x; }\n * }\n */\nclass Solution {\n    public TreeNode lowestCommonAncestor(TreeNode root, TreeNode p, TreeNode q) {\n        if (root == null || root == p || root == q) return root;\n        TreeNode left = lowestCommonAncestor(root.left, p, q);\n        TreeNode right = lowestCommonAncestor(root.right, p, q);\n        if (left != null && right != null) {\n            return root;\n        }\n        return left == null? right : left;\n    }\n    // Follow up: If one node is not in the tree, then you should report error\n    // if (solu != null && slu != p, && solu != q) return solu;\n    // if (solu == p) {\n    //     return lca(p, q, q) == q? solu : null;\n    // }\n}\n"}