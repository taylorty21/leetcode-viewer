{"java":"public class Solution {\r\n    //              1, 2, 3\r\n    //      1, (2, 3)    2, (1, 3)   3, (2, 1)\r\n    //      1, 3, 2       2, 3, 1     3, 1, 2\r\n    public List<List<Integer>> permute(int[] nums) {\r\n        List<List<Integer>> res = new ArrayList<List<Integer>>();\r\n        List<Integer> sol = new ArrayList<>();\r\n        permute(nums, 0, res);\r\n        return res;\r\n    }\r\n    \r\n    public void permute(int[] nums, int index, List<List<Integer>> res) {\r\n        if (index == nums.length) {\r\n            // int[] to ArrayList<Integer>\r\n            List<Integer> list = IntStream.of(nums).boxed().collect(Collectors.toList());\r\n            res.add(list);\r\n            return;\r\n\r\n        }\r\n        for (int i = index; i < nums.length; i++) {\r\n            swap(nums, i, index);\r\n            permute(nums, index + 1, res);\r\n            swap(nums, i, index);\r\n        }\r\n    }\r\n    \r\n    private void swap(int[] arr, int i, int j) {\r\n        int tmp = arr[i];\r\n        arr[i] = arr[j];\r\n        arr[j] = tmp;\r\n    }\r\n}"}