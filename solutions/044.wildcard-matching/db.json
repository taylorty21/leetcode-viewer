{"java":"class Solution {\n    public boolean isMatch(String s, String p) {\n        if (s == null || p == null) return false; \n        int pLen = p.length(), sLen = s.length();\n        boolean[][] dp = new boolean [pLen + 1][sLen + 1];\n        dp[0][0] = true;\n        // * is not the first element\n        for (int i = 0; i < pLen; i++) {\n            if (p.charAt(i) == '*') dp[i + 1][0] = dp[i][0];\n        }\n        for (int i = 0; i < pLen; i++) {\n            for (int j = 0; j < sLen; j++) {\n                if (s.charAt(j) == p.charAt(i)) dp[i + 1][j + 1] = dp[i][j]; // From its upper-left element\n                if (p.charAt(i) == '?') dp[i + 1][j + 1] = dp[i][j]; // From its upper-left element\n                if (p.charAt(i) == '*') {\n                    dp[i + 1][j + 1] = dp[i][j + 1] || dp[i + 1][j]; \n                    // Case 1: From its upper element (* is an empty string)\n                    // Case 2: From its left element (same row), if * match any sequence\n                    // if abc match ab* then so does abcd\n                }\n            }\n        }\n        return dp[pLen][sLen];\n    }\n}"}