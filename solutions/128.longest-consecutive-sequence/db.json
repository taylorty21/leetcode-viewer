{"java":"class Solution {\n    // Time: O(n)\n    // Space: O(n)\n    // Use Set\n    public int longestConsecutive(int[] nums) {\n        Set<Integer> set = new HashSet<>();\n        for(int n : nums) {\n            set.add(n);\n        }\n        int best = 0;\n        for(int n : set) {\n            if(!set.contains(n - 1)) {  // only check for one direction\n                int m = n + 1;\n                while(set.contains(m)) {\n                    m++;\n                }\n                best = Math.max(best, m - n);\n            }\n        }\n        return best;\n    }\n}"}