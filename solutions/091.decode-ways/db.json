{"java":"class Solution {\n    // base case\n    // dp[n]  = 1;\n    // dp[n-1] = s.charAt(n-1) != '0' ? 1 : 0;\n    // induction rule\n    // substring > 26 dp[i + 1]\n    // substring <= 26 dp[i + 1] + dp[i + 2]\n    public int numDecodings2(String s) {\n        int n = s.length();\n        if (n == 0) return 0;\n        int[] dp = new int[n + 1];\n        dp[n] = 1;\n        dp[n-1] = s.charAt(n-1) != '0' ? 1 : 0; // 0 -> 0, (1, 2) -> 1\n        \n        for (int i = n - 2; i >= 0; i--) {\n            if (s.charAt(i) == '0') continue;\n            else dp[i] = (Integer.parseInt(s.substring(i, i + 2)) <= 26) ? dp[i + 1] + dp[i + 2] : dp[i + 1];\n        }\n        return dp[0];\n    }\n    \n    public int numDecodings3(String s) {\n        int len = s.length();\n\t\tchar[] str = s.toCharArray();\n\t\tif (len == 0 || s.startsWith(\"0\")) return 0;\n\t\tint[] dp = new int[len + 1];\n\t\tdp[0] = 1;\n\t\tdp[1] = 1;\n\t\tfor (int i = 1; i < len; i++) {\n\t\t\tdp[i + 1] = str[i] == '0' ? 0 : dp[i];\n\t\t\tint num = 10 * (str[i - 1] - '0') + str[i] - '0';\n\t\t\tdp[i + 1] += str[i - 1] != '0' && num <= 26 && num > 0 ? dp[i - 1] : 0;\n\t\t}\n\t\treturn dp[len];\n    }\n    \n    public int numDecodings(String s) {\n        int len = s.length();\n\t\tchar[] str = s.toCharArray();\n\t\tif (len == 0 || s.startsWith(\"0\")) return 0;\n\t\tint[] dp = new int[len + 1];\n\t\tdp[0] = 1;\n\t\tdp[1] = 1;\n\t\tfor (int i = 1; i < len; i++) {\n            if (str[i] == '0') {\n                if (str[i - 1] >= '3' || str[i - 1] == '0') return 0; // 00, 30, 40...\n                dp[i + 1] = dp[i - 1];\n            } else {\n                int num = 10 * (str[i - 1] - '0') + str[i] - '0';\n                // if (str[i - 1] != '0' && (num <= 26 && num >= 21 || num >= 11 && num <= 19)) { // 11 - 19, 21 - 26\n                //     dp[i + 1] = dp[i] + dp[i - 1];\n                // } else { // 01 - 09, 27 - 99\n                //     dp[i + 1] = dp[i];\n                // }\n                if (str[i - 1] == '0' || (num > 26)) { // 01 - 09, 27 - 99\n                    dp[i + 1] = dp[i];\n                } else { // 11 - 19, 21 - 26\n                    dp[i + 1] = dp[i] + dp[i - 1];\n                }\n            }\n\t\t}\n\t\treturn dp[len];\n    }\n    \n    public int numDecodingsConstantSpace(String s) {\n        if (s == null || s.length() == 0 || s.charAt(0) == '0') {\n            return 0;\n        }\n        int num1 = 1;\n        int num2 = 1;\n        int num3 = 1;\n        for (int i = 1; i < s.length(); i++) {\n            if (s.charAt(i) == '0') {\n                if (s.charAt(i - 1) == '1' || s.charAt(i - 1) == '2')\n                    num3 = num1;\n                else\n                    return 0;\n            } else {\n                if (s.charAt(i - 1) == '0' || s.charAt(i - 1) >= '3')\n                    num3 = num2;\n                else {\n                    if (s.charAt(i - 1) == '2' && s.charAt(i) >= '7' && s.charAt(i) <= '9')\n                        num3 = num2;\n                    else\n                        num3 = num1 + num2;\n                }\n            }\n            num1 = num2;\n            num2 = num3;\n        }\n        return num2;\n    }\n}"}