{"java":"class Solution {\n    public boolean isMatch(String s, String p) {\n        if (s == null || p == null) return false; \n        int pLen = p.length(), sLen = s.length();\n        boolean[][] dp = new boolean [pLen + 1][sLen + 1];\n        dp[0][0] = true;\n        // * is not the first element\n        for (int i = 0; i < pLen; i++) {\n            if (p.charAt(i) == '*') dp[i + 1][0] = dp[i - 1][0]; \n            // if (p.charAt(i) == '.') dp[i + 1][0] = true;\n            // else {\n            //     dp[i + 1][0] = false;\n            //     dp[0][j + 1] = false;\n            // }\n        }\n        for (int i = 0; i < pLen; i++) {\n            for (int j = 0; j < sLen; j++) {\n                if (s.charAt(j) == p.charAt(i)) dp[i + 1][j + 1] = dp[i][j]; // From its upper-left element\n                if (p.charAt(i) == '.') dp[i + 1][j + 1] = dp[i][j]; // From its upper-left element\n                if (p.charAt(i) == '*') {\n                    \n                    if (i > 0 && s.charAt(j) == p.charAt(i - 1) || p.charAt(i - 1) == '.') {\n                        dp[i + 1][j + 1] = dp[i + 1][j] || dp[i - 1][j + 1]; /// From same its left element\n                    } else {\n                        dp[i + 1][j + 1] = dp[i - 1][j + 1]; // From its upper two element on the same col, if * match 0 preceding element\n                    }\n                }\n            }\n        }\n        return dp[pLen][sLen];\n    }\n}"}