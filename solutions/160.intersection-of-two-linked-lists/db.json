{"java":"/**\r\n * Definition for singly-linked list.\r\n * public class ListNode {\r\n *     int val;\r\n *     ListNode next;\r\n *     ListNode(int x) {\r\n *         val = x;\r\n *         next = null;\r\n *     }\r\n * }\r\n */\r\npublic class Solution {\r\n    public ListNode getIntersectionNode(ListNode headA, ListNode headB) {\r\n        if (headA == null || headB == null) return null;\r\n        ListNode a = headA;\r\n        ListNode b = headB;\r\n    \r\n        // if a & b have different len, then we will stop the loop after second iteration\r\n        while( a != b){\r\n        \t// for the end of first iteration, we just reset the pointer to the head of another linkedlist\r\n            if (a == null) {\r\n                a = headB;\r\n            } else {\r\n                a = a.next;\r\n            }\r\n            if (b == null) {\r\n                b = headA;\r\n            } else {\r\n                b = b.next;\r\n            }\r\n        }\r\n        return a;\r\n    }\r\n}"}