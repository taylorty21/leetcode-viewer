{"java":"/**\n * Definition for a binary tree node.\n * public class TreeNode {\n *     int val;\n *     TreeNode left;\n *     TreeNode right;\n *     TreeNode(int x) { val = x; }\n * }\n */\npublic class Solution {\n    public List<String> binaryTreePaths(TreeNode root) {\n        List<String> res = new ArrayList<>();\n        if (root == null) return res;\n        Stack<TreeNode> stack = new Stack<>();\n        Stack<String> path = new Stack<>();\n        stack.add(root);\n        path.push(\"\");\n        while (!stack.isEmpty()) {\n            TreeNode node = stack.pop();\n            String tmpPath = path.pop();\n            if (node.left == null && node.right == null) {\n                res.add(tmpPath + node.val);\n            }\n            if (node.left != null) {\n                stack.push(node.left);\n                path.push(tmpPath + node.val + \"->\");\n            } \n            if (node.right != null) {\n                stack.push(node.right);\n                path.push(tmpPath + node.val + \"->\");\n            }\n            \n        }\n        return res;\n    }\n    \n    public void help(List<String> list, TreeNode node, String s) {\n        if (node == null)\n            return;\n        if (node.left == null && node.right == null) {\n            list.add(s + node.val);\n            return;\n        }\n        help(list, node.left, s + node.val + \"->\");\n        help(list, node.right, s + node.val + \"->\");\n    }\n\n    public List<String> binaryTreePaths2(TreeNode root) {\n        List<String> res = new ArrayList<String>();\n        help(res, root, \"\");\n        return res;\n    }\n    \n    public void help2(List<String> list, TreeNode node, StringBuilder sb) {\n\t\tif (node == null)\n\t\t\treturn;\n\t\tint len = sb.length();\n\t\tsb.append(node.val);\n\t\tif (node.left == null && node.right == null) {\t\t\t\t\n\t\t\tlist.add(sb.toString());\n\t\t\tsb.setLength(len);\n\t\t\treturn;\n\t\t}\n\t\tsb.append(\"->\");\n\t\thelp2(list, node.left, sb);\n\t\thelp2(list, node.right, sb);\n\t\tsb.setLength(len);\n\t}\n\n\tpublic List<String> binaryTreePaths3(TreeNode root) {\n\t\tList<String> res = new ArrayList<String>();\n\t\thelp2(res, root, new StringBuilder());\n\t\treturn res;\n\t}\n}"}