{"java":"public class Solution {\r\n    public int[] twoSum(int[] nums, int target) {\r\n        // Method 1: two pointers\r\n        int[] res = new int[2];\r\n        int p1 = 0, p2 = nums.length - 1;\r\n        while (p1 < p2) {\r\n            if (nums[p1] + nums[p2] == target) {\r\n                res[0] = p1 + 1;\r\n                res[1] = p2 + 1;\r\n                return res;\r\n            } else if (nums[p1] + nums[p2] < target) {\r\n                p1++;\r\n            } else {\r\n                p2--;\r\n            }\r\n        }\r\n        return res;\r\n    }\r\n    \r\n    // Method 2: binary search O(nlgn)\r\n    public int[] twoSum2(int[] nums, int target) {\r\n        int n = nums.length;\r\n        for (int i = 0; i < n; i++) {\r\n            int j = Arrays.binarySearch(nums, i + 1, n, target - nums[i]);\r\n            if (j >= 0) {\r\n                return new int[]{ i + 1, j + 1 };\r\n            }\r\n        }\r\n        return new int[]{ -1, -1 };\r\n    }\r\n\r\n}"}