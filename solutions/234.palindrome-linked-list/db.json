{"java":"/**\r\n * Definition for singly-linked list.\r\n * public class ListNode {\r\n *     int val;\r\n *     ListNode next;\r\n *     ListNode(int x) { val = x; }\r\n * }\r\n */\r\npublic class Solution {\r\n    public boolean isPalindrome(ListNode head) {\r\n        ListNode fast = head, slow = head;\r\n        while (fast != null && fast.next != null) {\r\n            fast = fast.next.next;\r\n            slow = slow.next;\r\n        }\r\n        if (fast != null) { // odd nodes: let right half smaller\r\n            slow = slow.next;\r\n        }\r\n        slow = reverse(slow);\r\n        fast = head;\r\n        \r\n        while (slow != null) {\r\n            if (fast.val != slow.val) {\r\n                return false;\r\n            }\r\n            fast = fast.next;\r\n            slow = slow.next;\r\n        }\r\n        return true;\r\n    }\r\n    \r\n    public ListNode reverse(ListNode head) {\r\n        ListNode prev = null;\r\n        while (head != null) {\r\n        ListNode next = head.next;\r\n        head.next = prev;\r\n        prev = head;\r\n        head = next;\r\n        }\r\n        return prev;\r\n    }\r\n}"}