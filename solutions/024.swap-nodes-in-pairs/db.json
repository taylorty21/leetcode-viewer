{"java":"/**\n * Definition for singly-linked list.\n * public class ListNode {\n *     int val;\n *     ListNode next;\n *     ListNode(int x) { val = x; }\n * }\n */\nclass Solution {\n    public ListNode swapPairs(ListNode head) {\n        ListNode dummy = new ListNode(0);\n        dummy.next = head;\n        ListNode current = dummy;\n        while (current.next != null && current.next.next != null) {\n            ListNode first = current.next;\n            ListNode second = current.next.next;\n            //       1    ->     2  ->   3   ->4\n            // curr, first, second\n            //       2    ->     1  ->   3\n            first.next = second.next; // 1.next = 2.next = 3\n            current.next = second;    // put 2 to the front\n            current.next.next = first; // curr.next.next = 1\n            \n            current = current.next.next; // move forward\n        }\n        return dummy.next;\n    }\n    \n    public ListNode swapPairsRec(ListNode head) {\n        if ((head == null) || (head.next == null))\n            return head;\n        ListNode n = head.next;\n        head.next = swapPairsRec(head.next.next);\n        n.next = head;\n        return n;\n    }\n}"}