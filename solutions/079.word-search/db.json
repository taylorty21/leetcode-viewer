{"java":"class Solution {\n    static boolean[][] visited;\n    \n    public boolean exist(char[][] board, String word) {\n        visited = new boolean[board.length][board[0].length];\n        for (int i = 0; i < board.length; i++) {\n            for (int j = 0; j < board[0].length; j++) {\n                if (board[i][j] == word.charAt(0)) {\n                    if (exist(board, i, j, 0, word)) return true;\n                }\n            }\n        }\n        return false;\n    }\n    \n    public boolean exist(char[][] board, int i, int j, int index, String word) {\n        if (index == word.length()) {\n            return true;\n        }\n        \n        if (i >= board.length || i < 0 || j < 0 || j >= board[i].length || board[i][j] != word.charAt(index) || visited[i][j])      \n            return false;\n        visited[i][j] = true;\n        if (exist(board, i + 1, j, index + 1, word) ||\n            exist(board, i, j + 1, index + 1, word) ||\n            exist(board, i - 1, j, index + 1, word) ||\n            exist(board, i, j - 1, index + 1, word)) return true;\n        visited[i][j] = false; // Mark visited 2, unmark when backtrack\n        return false;\n    }\n}"}