{"java":"public class MinStack {\r\n    private LinkedList<Integer> stack1;\r\n    private LinkedList<Integer> stack2;\r\n\r\n    /** initialize your data structure here. */\r\n    public MinStack() {\r\n        stack1 = new LinkedList<>();\r\n\t    stack2 = new LinkedList<>();\r\n    }\r\n    \r\n    public void push(int x) {\r\n        stack1.push(x);\r\n        if (!stack2.isEmpty() && stack2.peek() < x) {\r\n          stack2.push(stack2.peek());\r\n        } else {\r\n          stack2.push(x);\r\n        }\r\n    }\r\n    \r\n    public void pop() {\r\n        if (!stack1.isEmpty() && !stack2.isEmpty()) {\r\n            stack2.pop();\r\n            stack1.pop();\r\n        }\r\n    }\r\n    \r\n    public int top() {\r\n        if (!stack1.isEmpty()) {\r\n          return stack1.peek();\r\n        } else {\r\n          return -1;\r\n        }  \r\n    }\r\n    \r\n    public int getMin() {\r\n        if (!stack2.isEmpty()) {\r\n          return stack2.peek();\r\n        } else {\r\n          return -1;\r\n        }\r\n    }\r\n}\r\n\r\n/**\r\n * Your MinStack object will be instantiated and called as such:\r\n * MinStack obj = new MinStack();\r\n * obj.push(x);\r\n * obj.pop();\r\n * int param_3 = obj.top();\r\n * int param_4 = obj.getMin();\r\n */"}