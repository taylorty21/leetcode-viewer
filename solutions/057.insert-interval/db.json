{"java":"/**\n * Definition for an interval.\n * public class Interval {\n *     int start;\n *     int end;\n *     Interval() { start = 0; end = 0; }\n *     Interval(int s, int e) { start = s; end = e; }\n * }\n */\nclass Solution {\n    public List<Interval> insert(List<Interval> intervals, Interval newInterval) {\n        // Add intervals before the new Interval\n        List<Interval> res = new ArrayList<>();\n        for (Interval interval: intervals) {\n            if (newInterval == null || interval.end < newInterval.start) {\n                // Add intervals before the new Interval\n                res.add(interval);\n            } else if (interval.start > newInterval.end) {\n                // Add interval after the newInterval\n                res.add(newInterval);\n                res.add(interval);\n                newInterval = null;\n            } else {\n                // Merge newInterval with other intervals\n                newInterval = new Interval(Math.min(newInterval.start, interval.start), Math.max(newInterval.end, interval.end));\n            \n            }\n        }\n        if (newInterval != null) res.add(newInterval);\n        return res;\n    }\n}"}