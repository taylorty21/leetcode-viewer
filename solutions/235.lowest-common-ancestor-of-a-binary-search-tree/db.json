{"java":"/**\n * Definition for a binary tree node.\n * public class TreeNode {\n *     int val;\n *     TreeNode left;\n *     TreeNode right;\n *     TreeNode(int x) { val = x; }\n * }\n */\nclass Solution {\n    public TreeNode lowestCommonAncestor(TreeNode root, TreeNode p, TreeNode q) {\n        while ((root.val - p.val) * (root.val - q.val) > 0)\n            root = p.val < root.val ? root.left : root.right;\n        return root;\n    }\n    \n    public TreeNode LCA(TreeNode root, TreeNode p, TreeNode q) {\n        if ((root.val - p.val) * (root.val - q.val) < 1) {\n            return root;\n        } else {\n            if (p.val < root.val) {\n                return lowestCommonAncestor(root.left, p, q);\n            }\n            return lowestCommonAncestor(root.right, p, q);\n        }           \n    }\n}"}