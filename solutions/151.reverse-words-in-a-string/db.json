{"java":"public class Solution {\n    \n    public String reverseWords(String str) {\n        int begin = 0; // end of last word\n        int end = 0;\n        int i = 0;\n        char[] s = str.toCharArray();\n        while (i < s.length && s[i] == ' ') i++; //skip leading whitespace\n        while (i < s.length) {\n            int j = i;\n            end = begin;\n            while (j < s.length && s[j] != ' ') {s[end] = s[j]; ++end; ++j;}\n            // s[j] == ' ' \n            reverse(s, begin, end); //reverses [begin, end-1]\n            while (j < s.length && s[j] == ' ') ++j;\n            // s[j] != ' '\n            i = j;\n            if (end < s.length) s[end] = ' ';\n            begin = end+1;\n        }\n        reverse(s, 0, end);\n        return new String(s).substring(0, end);\n    }\n    \n    private void reverse(char[] s, int begin, int end) {\n        --end;\n        while(begin < end) {\n            char temp = s[begin];\n            s[begin] = s[end];\n            s[end] = temp;\n            ++begin;\n            --end;\n        }\n    }\n    \n    public String reverseWords3(String s) {\n        if (s == null) return null;\n        char[] a = s.toCharArray();\n        int n = a.length;\n\n        // step 1. reverse the whole string\n        reverse(a, 0, n - 1);\n        // step 2. reverse each word\n        reverseWords(a, n);\n        // step 3. clean up spaces\n        return cleanSpaces(a, n);\n    }\n \n    void reverseWords(char[] a, int n) {\n        int i = 0, j = 0;\n\n        while (i < n) {\n            while (i < j || i < n && a[i] == ' ') i++; // skip spaces\n            while (j < i || j < n && a[j] != ' ') j++; // skip non spaces\n            reverse(a, i, j - 1);                      // reverse the word\n        }\n    }\n    \n    String cleanSpaces(char[] a, int n) {\n        int i = 0, j = 0;\n\n        while (j < n) {\n          while (j < n && a[j] == ' ') j++;             // skip spaces\n          while (j < n && a[j] != ' ') a[i++] = a[j++]; // keep non spaces\n          while (j < n && a[j] == ' ') j++;             // skip spaces\n          if (j < n) a[i++] = ' ';                      // keep only one space\n        }\n\n        return new String(a).substring(0, i);\n    }\n    \n    // reverse a[] from a[i] to a[j]\n    private void reverse2(char[] a, int i, int j) {\n        while (i < j) {\n          char t = a[i];\n          a[i++] = a[j];\n          a[j--] = t;\n        }\n    }\n    \n    public String reverseWords2(String s) {\n        String[] words = s.trim().split(\" +\");\n        Collections.reverse(Arrays.asList(words));\n        return String.join(\" \", words);\n    }\n    \n    public String reverseWords4(String s) {\n        if (s == null || s.length() == 0) return \"\";\n        String[] array = s.split(\" \");\n        StringBuilder sb = new StringBuilder();\n        for (int i = array.length - 1; i >= 0; --i) {\n            if (!array[i].equals(\"\")) {\n                sb.append(array[i]).append(\" \");\n            }\n        }\n        return sb.length() == 0 ? \"\" : sb.substring(0, sb.length() - 1);                       \n    }\n}"}