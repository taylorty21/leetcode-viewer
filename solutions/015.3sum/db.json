{"java":"public class Solution {\n    public List<List<Integer>> threeSum(int[] nums) {\n        List<List<Integer>> res = new ArrayList<>();\n        Arrays.sort(nums);\n        for (int i = 0; i < nums.length; i++) {\n            if (i == 0 || (i > 0 && nums[i] != nums[i-1])) {\n                int slow = i + 1, fast = nums.length - 1;\n                while (slow < fast) {\n                    if (nums[slow] + nums[fast] == -nums[i]) {\n                        List<Integer> lvl = new ArrayList<>();\n                        res.add(Arrays.asList(nums[i], nums[slow], nums[fast]));\n                        while (slow < fast && nums[slow] == nums[slow + 1]) slow++;\n                        while (slow < fast && nums[fast] == nums[fast - 1]) fast--;\n                        slow++;\n                        fast--;\n                    } else if (nums[slow] + nums[fast] < -nums[i]) {\n                        slow++;\n                    } else {\n                        fast--;\n                    }\n                }\n            }\n        }\n        return res;\n    }\n}"}