{"java":"class Solution {\n    // Time complexity:  O(n^2)\n    // Space complexity: O(n^2)\n    public int fourSumCount(int[] A, int[] B, int[] C, int[] D) {\n        Map<Integer, Integer> map = new HashMap<>();\n    \n        for(int i=0; i<C.length; i++) {\n            for(int j=0; j<D.length; j++) {\n                int sum = C[i] + D[j];\n                map.put(sum, map.getOrDefault(sum, 0) + 1);\n            }\n        }\n\n        int res=0;\n        for(int i=0; i<A.length; i++) {\n            for(int j=0; j<B.length; j++) {\n                res += map.getOrDefault(-1 * (A[i]+B[j]), 0);\n            }\n        }\n\n        return res;\n    }\n\n}"}