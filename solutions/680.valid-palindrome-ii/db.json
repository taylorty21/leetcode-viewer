{"java":"class Solution {\n    // Follow normal way (two pointers) to check if s is palindrome. \n    // When two chars are not equal, try to skip (pseudo delete) either left one or right one and continue checking.\n    public boolean validPalindrome(String s) {\n        int i = 0, j = s.length() - 1;\n        while (i < j && s.charAt(i) == s.charAt(j)) {\n            i++; j--;\n        }\n\n        if (i >= j) return true;\n\n        if (isPalin(s, i + 1, j) || isPalin(s, i, j - 1)) return true;\n        return false;\n    }\n\n    private boolean isPalin(String s, int i, int j) {\n        while (i < j) {\n            if (s.charAt(i) == s.charAt(j)) {\n                i++; j--;\n            }\n            else return false;\n        }\n        return true;\n    }\n}"}