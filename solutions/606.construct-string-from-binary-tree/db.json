{"java":"/**\n * Definition for a binary tree node.\n * public class TreeNode {\n *     int val;\n *     TreeNode left;\n *     TreeNode right;\n *     TreeNode(int x) { val = x; }\n * }\n */\npublic class Solution {\n    public String tree2str(TreeNode t) {\n        if (t == null) return \"\";\n        String result = t.val + \"\";\n        \n        String left = tree2str(t.left);\n        String right = tree2str(t.right);\n        \n        if (left.equals(\"\") && right.equals(\"\")) return result;\n        if (left.equals(\"\")) return result + \"()\" + \"(\" + right + \")\";\n        if (right.equals(\"\")) return result + \"(\" + left + \")\";\n        return result + \"(\" + left + \")\" + \"(\" + right + \")\";\n    }\n    \n    public String tree2str2(TreeNode t) {\n        StringBuilder sb = new StringBuilder();\n        helper(sb,t);\n        return sb.toString();\n    }\n    \n    public void helper(StringBuilder sb,TreeNode t){\n        if (t!=null){\n            sb.append(t.val);\n            if(t.left != null || t.right != null) {\n                sb.append(\"(\");\n                helper(sb,t.left);\n                sb.append(\")\");\n                if (t.right != null) {\n                    sb.append(\"(\");\n                    helper(sb,t.right);\n                    sb.append(\")\");\n                }\n            }\n        }\n    }\n}"}