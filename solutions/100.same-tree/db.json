{"java":"/**\n * Definition for a binary tree node.\n * public class TreeNode {\n *     int val;\n *     TreeNode left;\n *     TreeNode right;\n *     TreeNode(int x) { val = x; }\n * }\n */\npublic class Solution {\n    public boolean isSameTree(TreeNode p, TreeNode q) {\n        if (p == null && q == null) return true;\n        if (p == null || q == null) return false;\n        // (p == null && q != null || p != null && q == null)\n        if (p.val != q.val) return false;\n        // p != null && q != null && p.val != q.val\n        \n        // if (p != null && q != null && p.val == q.val) {\n        //     return true;\n        // }\n        // The part above should not be there because we only need one positive base case \n        // Otherwise `true` will be returned earlier than expected\n        return isSameTree(p.left, q.left) && isSameTree(p.right, q.right);\n    }\n    \n    public boolean isSameTree2(TreeNode p, TreeNode q) {\n        if(p == null && q == null) return true;\n        if(p == null || q == null) return false;\n        if(p.val == q.val)\n            return isSameTree(p.left, q.left) && isSameTree(p.right, q.right);\n        return false;\n    }\n}"}