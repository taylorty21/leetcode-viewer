{"java":"/**\n * Definition for a binary tree node.\n * public class TreeNode {\n *     int val;\n *     TreeNode left;\n *     TreeNode right;\n *     TreeNode(int x) { val = x; }\n * }\n */\nclass Solution {\n    public TreeNode mergeTrees2(TreeNode t1, TreeNode t2) {\n        if (t1 == null && t2 == null) return null;\n        \n        int val = (t1 == null ? 0 : t1.val) + (t2 == null ? 0 : t2.val);\n        TreeNode newNode = new TreeNode(val);\n        \n        newNode.left = mergeTrees(t1 == null ? null : t1.left, t2 == null ? null : t2.left);\n        newNode.right = mergeTrees(t1 == null ? null : t1.right, t2 == null ? null : t2.right);\n        \n        return newNode;\n    }\n    \n    public TreeNode mergeTrees(TreeNode t1, TreeNode t2) {\n        if (t1 == null) return t2;\n        if (t2 == null) return t1;\n\n        TreeNode node = new TreeNode(t1.val + t2.val);\n        node.left = mergeTrees(t1.left, t2.left);\n        node.right = mergeTrees(t1.right, t2.right);\n        return node;\n    }\n}"}