{"java":"public class Solution {\r\n    public int myAtoi(String str) {\r\n        // Special cases: leading zeros: 0001 -> 1\r\n        // floating point num\r\n        // negative num: -xxx\r\n        // overflow\r\n        // not a num\r\n        \r\n        // white spaces\r\n        // + \r\n        // -+2 -> 0\r\n        // \"9223372036854775809\" larger than long\r\n        long res = 0;\r\n        long max = Integer.MAX_VALUE + 1;\r\n        int sign = 1, index = 0;\r\n        // skip white spaces\r\n        while (index < str.length() && str.charAt(index) == ' ' ) {\r\n            index++;\r\n        }\r\n        // if (index < str.length() && str.charAt(index) == '-') {\r\n        //     flag = true;\r\n        //     sign++;\r\n        // }\r\n        // if (sign < str.length() && str.charAt(sign) == '+') {\r\n        //     sign++;\r\n        //     if (flag) {\r\n        //         return 0;\r\n        //     }\r\n        // }\r\n        // handle sign\r\n        if(index < str.length() && (str.charAt(index) == '+' || str.charAt(index) == '-')){\r\n            sign = str.charAt(index) == '+' ? 1 : -1;\r\n            index ++;\r\n        }\r\n    \r\n        for (int i = index; i < str.length(); i++) {\r\n            int digit = str.charAt(i) - '0';\r\n            if (digit >= 0 && digit <= 9) {\r\n                \r\n                // check if total will be overflow after 10 times and add digit\r\n                if(Integer.MAX_VALUE / 10 < res || Integer.MAX_VALUE / 10 == res && Integer.MAX_VALUE % 10 < digit)\r\n                    return sign == 1 ? Integer.MAX_VALUE : Integer.MIN_VALUE;\r\n                res = res * 10 + digit;\r\n            } else {\r\n                // stop when there is non-digit character\r\n                break;\r\n            }\r\n        }\r\n        // if (res > Integer.MAX_VALUE) return Integer.MAX_VALUE;\r\n        // if (res < Integer.MIN_VALUE) return Integer.MIN_VALUE;\r\n        return (int) res * sign;\r\n    }\r\n}"}